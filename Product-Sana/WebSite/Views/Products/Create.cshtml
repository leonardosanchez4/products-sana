@model WebSite.Models.ProductModel

@{
    ViewBag.Title = "Create";
}

@{
    if (Model != null)
    {
        if (Model.ErrorMessage != "")
        {
            if (Model.ErrorMessage == "OK")
            {
                <div class="alert alert-success">
                    <strong>Record Successfully Saved!</strong> 
                </div>
            }
            else
            {
                <div class="alert alert-danger">
                    <strong>Error! @Model.ErrorMessage </strong> 
                </div>
            }
        }
    }

}



<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Products</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentUnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentUnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentUnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div  class="col-md-10">
                <select name="Categories[]" id="Categories" class="selectpicker" multiple>
                    @{
                        if (Model != null)
                        {
                            foreach (var item in Model.CategoriesList)
                            {
                                <option value="@item.Id">@item.CategoryName</option>
                            }
                        }

                    }
                </select>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        @Html.Raw(Model.MultiselectScript)


        $('.selectpicker').selectpicker({
            style: 'btn-info',
            size: 4
        });
    </script>


}
